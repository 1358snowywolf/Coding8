#include <bits/stdc++.h>

using namespace std;
map<int, int> past;
map<int, int> indexes; // current previous

int main(){
	vector<pair<int, int>> input;
	int N;
	cin >> N;
	int a, b;
	vector<int> parents;

	for(int i = 0; i < N; i++){
		cin >> a >> b;

		input.push_back(make_pair(a, b));
		parents.push_back(i);
		past.insert(make_pair(b, i));
	}

	sort(input.begin(), input.end());
	vector<int> DP (input.size(), 0);

	DP[0] = 1;

	for(int i = 1; i < N; i++){
		int bestIndex = i;
		indexes[input[i].second] = i;

		for(int j = i - 1; j >= 0; j--){
			if(DP[bestIndex] < DP[j] && input[i].second < input[j].second){
				bestIndex = j;
			}
		}

		parents[i] = bestIndex;
		DP[i] = DP[bestIndex] + 1;
	}

	int best = 0;

	for(int i = 1; i < N; i++){
		if(DP[best] < DP[i]){
			best = i;
		}
	}

	for(int i = 0; i < N; i++){
		cout << parents[i] << " ";
	}
	cout << endl;

	cout << DP[best] << endl;
	int u = parents[best];

	while(u != parents[u]){
		cout << indexes[u] + 1 << endl;
		u = parents[u];
	}

	cout << indexes[u];

	return 0;
}
