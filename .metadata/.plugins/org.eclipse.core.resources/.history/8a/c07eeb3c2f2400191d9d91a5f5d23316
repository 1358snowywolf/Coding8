#include <bits/stdc++.h>

using namespace std;

int main(){
	string str;
	cin >> str;

	vector<vector<int>> palindromes (str.size(), vector<int> (str.size(), 0));

	for(int i = 0; i < (int) str.size(); i++){
		palindromes[i][i] = 1;
	}

	for(int i = 0; i < (int) str.size() - 1; i++){
		if(str[i] == str[i + 1]){
			palindromes[i][i + 1] = 1;
		}
	}

	cout << endl;

	for(auto i : palindromes){
		for(auto j : i){
			cout << j << " ";
		}
		cout << endl;
	}
	cout << "................." << endl;

	for(int length = 2; length < (int) str.size(); length++){
		for(int L = 0; L <= (int) str.size() - length; L++){
			palindromes[L][length] = palindromes[L + 1][length - 1] && str[0] == str[length];
		}

		cout << endl;

		for(auto i : palindromes){
			for(auto j : i){
				cout << j << " ";
			}
			cout << endl;
		}
		cout << "................." << endl;
	}

	vector<vector<int>> DP (str.size(), vector<int> (str.size(), 0));

	for(int i = 0; i < (int) str.size(); i++){
		for(int j = i; j < (int) str.size(); j++){
			if(i == 0 && j == 0){
				DP[0][0] = palindromes[0][0];
			}
			else if(i == 0){
				DP[i][j] = palindromes[i][j] + DP[i][j - 1];
			}
			else if(j == 0){
				DP[i][j] = palindromes[i][j] + DP[i - 1][j];
			}
			else{
				DP[i][j] = palindromes[i][j] + DP[i - 1][j] + DP[i][j - 1] - DP[i - 1][j - 1];
			}
		}
	}

	cout << endl;

	for(auto i : palindromes){
		for(auto j : i){
			cout << j << " ";
		}
		cout << endl;
	}

	int querries;
	cin >> querries;

	for(int i = 0; i < querries; i++){
		int L, R;
		cin >> L >> R;
		L--; R--;

		if(L == 0 && R == 0){
			cout << DP[0][0];
		}
		else if(L == 0){
			cout << DP[L][R] - DP[L][R - 1];
		}
		else if(R == 0){
			cout << DP[L][R] - DP[L - 1][R];
		}
		else{
			cout << DP[L][R] - DP[L - 1][R] - DP[i][R - 1] + DP[L - 1][R - 1];
		}

		cout << endl;
	}

	return 0;
}
